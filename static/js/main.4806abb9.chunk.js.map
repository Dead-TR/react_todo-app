{"version":3,"sources":["components/Main.js","components/shapes.js","components/Footer.js","components/Todo.js","App.js","index.js"],"names":["Main","PropTypes","shape","title","string","isRequired","tasks","completedChange","deleteTask","completedAll","console","log","className","type","id","onClick","htmlFor","map","taskUnit","activeClass","completed","key","onChange","checked","Footer","filterClass","deleteCompleted","filterAll","filters","left","forEach","task","length","href","event","Todo","state","taskPattern","filteredTasks","lastId","writeTask","target","value","setState","previous","saveTask","targetId","Number","split","activeTask","find","previousElementSibling","filter","condition","classFilter","preventDefault","displayTasks","this","placeholder","onKeyUp","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4806abb9.chunk.js","sourcesContent":["import React from 'react';\nimport { mainShape } from './shapes';\n\nexport const Main = ({ tasks, completedChange, deleteTask, completedAll }) => {\n  console.log(\"Main -> this\", tasks)\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onClick={completedAll}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {\n          tasks.map((taskUnit) => {\n            let activeClass = '';\n\n            taskUnit.completed ? activeClass = 'completed' : activeClass = '';\n\n            return (\n              <li key={taskUnit.id} className={activeClass}>\n                <div className=\"view\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"toggle\"\n                    id={`todo-${taskUnit.id}`}\n                    onChange={completedChange}\n                    checked={taskUnit.completed}\n                  />\n                  <label\n                    htmlFor={`todo-${taskUnit.id}`}\n                  >\n                    {taskUnit.title}\n                  </label>\n                  <button\n                    type=\"button\"\n                    className=\"destroy\"\n                    onClick={deleteTask}\n                  />\n                </div>\n                <input type=\"text\" className=\"edit\" />\n              </li>\n            );\n          })\n        }\n      </ul>\n    </section>\n  );\n};\n\nMain.propTypes = mainShape.isRequired;\n","import PropTypes from 'prop-types';\n\nexport const mainShape = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n\n});\n","import React from 'react';\n\nconst Footer = ({\n  filterClass,\n  tasks,\n  deleteCompleted,\n  filterAll,\n  filters }) => {\n  let left = 0;\n\n  tasks.forEach((task) => {\n    if (task.completed === false) {\n      left += 1;\n    }\n  });\n\n  if (tasks.length === 0) {\n    return null;\n  }\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {left}\n        &nbsp;\n        items left\n      </span>\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"/\"\n            className={filterClass[0]}\n            onClick={event => filterAll(event)}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"/active\"\n            className={filterClass[1]}\n            onClick={event => filters(event, false, '', 'selected', '')}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"/completed\"\n            className={filterClass[2]}\n            onClick={event => filters(event, true, '', '', 'selected')}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={deleteCompleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Main } from './Main';\nimport Footer from './Footer';\n\nclass Todo extends React.Component {\n  state = {\n    tasks: [],\n    taskPattern: {\n      title: '',\n      id: 0,\n      completed: false,\n    },\n    filteredTasks: null,\n    lastId: 0,\n    filterClass: ['selected', '', ''],\n  }\n\n  writeTask = (event) => {\n    const title = event.target.value;\n\n    this.setState(previous => ({\n      taskPattern: {\n        title: `${title}`,\n        id: previous.lastId,\n        completed: false,\n      },\n      lastId: previous.lastId + 1,\n    }));\n  };\n\n  saveTask = (event) => {\n    if (event.key === 'Enter' && this.state.taskPattern.title !== '') {\n      this.setState(previous => ({\n        tasks: [\n          ...previous.tasks,\n          previous.taskPattern,\n        ],\n        taskPattern: {\n          title: '',\n          id: 0,\n        },\n      }));\n    }\n  };\n\n  completedChange = (event) => {\n    const targetId = Number(event.target.id.split(/todo-/)[1]);\n\n    this.setState(previous => ({\n      tasks: previous.tasks.map((task) => {\n        if (task.id === targetId) {\n          return ({\n            ...task,\n            completed: !task.completed,\n          });\n        }\n\n        return task;\n      }),\n    }));\n  }\n\n  completedAll = () => {\n    this.setState(previous => ({\n      tasks: previous.tasks.map(task => ({\n        ...task,\n        completed: !task.completed,\n      })),\n    }));\n  }\n\n  deleteTask = (event) => {\n    const activeTask = this.state.tasks.find(task => (\n      Number(event\n        .target\n        .previousElementSibling\n        .htmlFor\n        .split(/todo-/)[1]) === task.id\n    ));\n\n    this.setState(previous => ({\n      tasks: previous.tasks.filter(task => (task !== activeTask)),\n    }));\n  }\n\n  deleteCompleted = (event) => {\n    this.setState(previous => ({\n      tasks: previous.tasks.filter(task => (task.completed === false)),\n    }));\n  }\n\n  filters = (event, condition, ...classFilter) => {\n    event.preventDefault();\n    this.setState(previous => ({\n      filteredTasks: previous\n        .tasks\n        .filter(task => (task.completed === condition)),\n      filterClass: [...classFilter],\n    }));\n  }\n\n  filterAll = (event) => {\n    event.preventDefault();\n    this.setState(() => ({\n      filteredTasks: null,\n      filterClass: ['selected', '', ''],\n    }));\n  };\n\n  render() {\n    const displayTasks = this.state.filteredTasks || [...this.state.tasks];\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            value={this.state.taskPattern.title}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.writeTask}\n            onKeyUp={this.saveTask}\n          />\n        </header>\n\n        <Main\n          tasks={displayTasks}\n          completedChange={this.completedChange}\n          deleteTask={this.deleteTask}\n          completedAll={this.completedAll}\n        />\n\n        <Footer\n          filterClass={this.state.filterClass}\n          filterAll={this.filterAll}\n          filters={this.filters}\n          tasks={this.state.tasks}\n          deleteCompleted={this.deleteCompleted}\n        />\n\n      </section>\n    );\n  }\n}\n\nexport default Todo;\n","import React from 'react';\nimport Todo from './components/Todo';\n\nfunction App() {\n\n  return (\n    <>\n      <Todo />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}