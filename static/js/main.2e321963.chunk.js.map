{"version":3,"sources":["components/Main.js","components/Footer.js","components/Todo.js","App.js","index.js"],"names":["Main","tasks","completedChange","deleteTask","className","map","taskUnit","key","id","type","onChange","htmlFor","title","onClick","Footer","deleteCompleted","left","filterAll","filterActive","filterCompleted","console","log","length","href","event","Todo","state","taskPattern","completed","filteredTasks","lastId","writeTask","target","value","setState","prev","saveTask","activeTask","find","task","Number","split","checked","li","closest","previousElementSibling","filter","preventDefault","displayTasks","this","forEach","placeholder","onKeyUp","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e321963.chunk.js","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\n\nexport const Main = ({ tasks, completedChange, deleteTask }) => {\n\n  return (\n    <ul className=\"todo-list\">\n      {\n        tasks.map((taskUnit) => {\n          return (\n            <li key={taskUnit.id}>\n              <div className=\"view\">\n                <input\n                  type=\"checkbox\"\n                  className=\"toggle\"\n                  id={`todo-${taskUnit.id}`}\n                  onChange={completedChange}\n                />\n                <label htmlFor={`todo-${taskUnit.id}`}>{taskUnit.title}</label>\n                <button\n                  type=\"button\"\n                  className=\"destroy\"\n                  onClick={deleteTask}\n                />\n              </div>\n              <input type=\"text\" className=\"edit\" />\n            </li>\n          );\n        })\n      }\n    </ul>\n  );\n\n}\n\n\n/*\n\n          <li className=\"editing\">\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" id=\"todo-3\" />\n              <label htmlFor=\"todo-3\">zxcvbnm</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n*/\n","import React from 'react';\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\nimport Todo from './Todo';\n\nconst Footer = ({ tasks, deleteCompleted, left, filterAll, filterActive, filterCompleted }) => {\nconsole.log(\" -> left\", left)\n\n  if (tasks.length === 0) {\n    return null;\n  }\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {left}\n        &nbsp;\n        items left\n      </span>\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"/\"\n            className=\"selected\"\n            onClick={event => filterAll(event)}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"/active\"\n            onClick={event => filterActive(event)}\n          >Active</a>\n        </li>\n\n        <li>\n          <a\n            href=\"/completed\"\n            onClick={event => filterCompleted(event)}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={deleteCompleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Main } from './Main';\nimport Footer from './Footer';\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\n\nclass Todo extends React.Component {\n  state = {\n    tasks: [],\n    taskPattern: {\n      title: '',\n      id: 0,\n      completed: false,\n    },\n    filteredTasks: null,\n    lastId: 0,\n  }\n\n  writeTask = (event) => {\n    const title = event.target.value;\n\n    this.setState(prev => ({\n      taskPattern: {\n        title: `${title}`,\n        id: prev.lastId,\n        completed: false,\n      },\n      lastId: prev.lastId + 1,\n    }));\n  };\n\n  saveTask = (event) => {\n    if (event.key === 'Enter' && this.state.taskPattern.title !== '') {\n      this.setState(prev => ({\n        tasks: [\n          ...prev.tasks,\n          prev.taskPattern,\n        ],\n        taskPattern: {\n          title: '',\n          id: 0,\n        },\n      }));\n    }\n  };\n\n  completedChange = (event) => {\n    const activeTask = this.state.tasks.find(task => (\n      Number(event\n        .target\n        .id\n        .split(/todo-/)[1]) === task.id\n    ));\n\n    activeTask.completed = event.target.checked;\n    const li = event.target.closest('LI');\n\n    activeTask.completed ? li.className = 'completed' : li.className = '';\n  }\n\n  deleteTask = (event) => {\n    const activeTask = this.state.tasks.find(task => (\n      Number(event\n        .target\n        .previousElementSibling\n        .htmlFor\n        .split(/todo-/)[1]) === task.id\n    ));\n\n    this.setState(prev => ({\n      tasks: prev.tasks.filter(task => (task !== activeTask)),\n    }));\n  }\n\n  deleteCompleted = (event) => {\n    this.setState(prev => ({\n      tasks: prev.tasks.filter(task => (task.completed === false)),\n    }));\n  }\n\n  filterCompleted = (event) => {\n    event.preventDefault();\n    this.setState(prev => ({\n      filteredTasks: prev.tasks.filter(task => (task.completed === true)),\n    }));\n  };\n\n  filterActive = (event) => {\n    event.preventDefault();\n    this.setState(prev => ({\n      filteredTasks: prev.tasks.filter(task => (task.completed === false)),\n    }));\n  };\n\n  filterAll = (event) => {\n    event.preventDefault();\n    this.setState(() => ({\n      filteredTasks: null,\n    }));\n  };\n\n  render() {\n    let left = 0;\n    const displayTasks = this.state.filteredTasks || [...this.state.tasks];\n\n    displayTasks.forEach((task) => {\n      if (task.completed === false) {\n        left += 1;\n      }\n    });\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            value={this.state.taskPattern.title}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.writeTask}\n            onKeyUp={this.saveTask}\n          />\n        </header>\n        <Router>\n          <section className=\"main\">\n            <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n            <Main\n              tasks={displayTasks}\n              completedChange={this.completedChange}\n              deleteTask={this.deleteTask}\n            />\n          </section>\n\n          <Footer\n            filterAll={this.filterAll}\n            filterCompleted={this.filterCompleted}\n            filterActive={this.filterActive}\n            left={left}\n            tasks={displayTasks}\n            deleteCompleted={this.deleteCompleted}\n          />\n        </Router>\n\n      </section>\n    );\n  }\n}\n\nexport default Todo;\n","import React from 'react';\nimport Todo from './components/Todo';\n\nfunction App() {\n\n  return (\n    <>\n      <Todo />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}