{"version":3,"sources":["components/shapes.js","components/Main.js","components/Footer.js","components/Todo.js","App.js","index.js"],"names":["tasksShape","PropTypes","shape","completed","bool","isRequired","id","number","title","string","Main","tasks","completedChange","func","deleteTask","completedAll","filterClass","arrayOf","deleteCompleted","filterAll","filters","className","type","onClick","event","htmlFor","map","taskUnit","activeClass","key","onChange","checked","Footer","left","forEach","task","length","href","preventDefault","Todo","state","JSON","parse","localStorage","getItem","taskPattern","filteredTasks","lastId","writeTask","target","value","setState","previous","saveTask","targetId","Number","split","check","activeTask","find","previousElementSibling","filter","condition","classFilter","this","setItem","stringify","displayTasks","placeholder","onKeyUp","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31000c1b.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst tasksShape = PropTypes.shape({\n  completed: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n});\n\nexport const mainShape = PropTypes.shape({\n  tasks: tasksShape,\n  completedChange: PropTypes.func.isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  completedAll: PropTypes.func.isRequired,\n});\n\nexport const footerShape = PropTypes.shape({\n  filterClass: PropTypes.arrayOf(PropTypes.string),\n  tasks: tasksShape,\n  deleteCompleted: PropTypes.func.isRequired,\n  filterAll: PropTypes.func.isRequired,\n  filters: PropTypes.func.isRequired,\n});\n","import React from 'react';\nimport { mainShape } from './shapes';\n\nexport const Main = ({ tasks, completedChange, deleteTask, completedAll }) => (\n  <section className=\"main\">\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      onClick={event => completedAll(event)}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n    <ul className=\"todo-list\">\n      {\n        tasks.map((taskUnit) => {\n          let activeClass = '';\n\n          taskUnit.completed ? activeClass = 'completed' : activeClass = '';\n\n          return (\n            <li key={taskUnit.id} className={activeClass}>\n              <div className=\"view\">\n                <input\n                  type=\"checkbox\"\n                  className=\"toggle\"\n                  id={`todo-${taskUnit.id}`}\n                  onChange={completedChange}\n                  checked={taskUnit.completed}\n                />\n                <label\n                  htmlFor={`todo-${taskUnit.id}`}\n                >\n                  {taskUnit.title}\n                </label>\n                <button\n                  type=\"button\"\n                  className=\"destroy\"\n                  onClick={deleteTask}\n                />\n              </div>\n              <input type=\"text\" className=\"edit\" />\n            </li>\n          );\n        })\n      }\n    </ul>\n  </section>\n);\n\nMain.propTypes = mainShape.isRequired;\n","import React from 'react';\nimport { footerShape } from './shapes';\n\nconst Footer = ({ filterClass,\n  tasks,\n  deleteCompleted,\n  filterAll,\n  filters }) => {\n  let left = 0;\n\n  tasks.forEach((task) => {\n    if (task.completed === false) {\n      left += 1;\n    }\n  });\n\n  if (tasks.length === 0) {\n    return null;\n  }\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {left}\n        &nbsp;\n        items left\n      </span>\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"/\"\n            className={filterClass[0]}\n            onClick={event => {\n              event.preventDefault();\n              filterAll();\n            }}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"/active\"\n            className={filterClass[1]}\n            onClick={event => filters(event, false)}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"/completed\"\n            className={filterClass[2]}\n            onClick={event => filters(event, true)}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={deleteCompleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nexport default Footer;\n\nFooter.propTypes = footerShape.isRequired;\n","import React from 'react';\nimport { Main } from './Main';\nimport Footer from './Footer';\n\nclass Todo extends React.Component {\n  state = {\n    tasks: JSON.parse(localStorage.getItem('savedTasks')) || [],\n    taskPattern: {\n      title: '',\n      id: 0,\n      completed: false,\n    },\n    filteredTasks: null,\n    lastId: 0,\n    filterClass: ['selected', '', ''],\n  }\n\n  componentDidUpdate() {\n    const { tasks } = this.state;\n\n    localStorage.setItem('savedTasks', JSON.stringify(tasks));\n  }\n\n  writeTask = (event) => {\n    const title = event.target.value;\n\n    this.setState(previous => ({\n      taskPattern: {\n        title: `${title}`,\n        id: previous.lastId,\n        completed: false,\n      },\n      lastId: previous.lastId + 1,\n    }));\n  };\n\n  saveTask = (event) => {\n    if (event.key === 'Enter' && this.state.taskPattern.title !== '') {\n      this.setState(previous => ({\n        tasks: [\n          ...previous.tasks,\n          previous.taskPattern,\n        ],\n        taskPattern: {\n          title: '',\n          id: 0,\n        },\n      }));\n    }\n  };\n\n  completedChange = (event) => {\n    const targetId = Number(event.target.id.split(/todo-/)[1]);\n\n    this.setState(previous => ({\n      tasks: previous.tasks.map((task) => {\n        if (task.id === targetId) {\n          return ({\n            ...task,\n            completed: !task.completed,\n          });\n        }\n\n        return task;\n      }),\n    }));\n    this.filterAll();\n  }\n\n  completedAll = (event) => {\n    const check = event.target;\n\n    this.setState(previous => ({\n      tasks: previous.tasks.map(task => ({\n        ...task,\n        completed: check.checked,\n      })),\n    }));\n  }\n\n  deleteTask = (event) => {\n    const activeTask = this.state.tasks.find(task => (\n      Number(event\n        .target\n        .previousElementSibling\n        .htmlFor\n        .split(/todo-/)[1]) === task.id\n    ));\n\n    this.setState(previous => ({\n      tasks: previous.tasks.filter(task => (task !== activeTask)),\n    }));\n  }\n\n  deleteCompleted = () => {\n    this.setState(previous => ({\n      tasks: previous.tasks.filter(task => (task.completed === false)),\n    }));\n    this.filterAll();\n  }\n\n  filters = (event, condition) => {\n    let classFilter = [];\n\n    condition === true\n      ? classFilter = ['', '', 'selected']\n      : classFilter = ['', 'selected', ''];\n\n    event.preventDefault();\n    this.setState(previous => ({\n      filteredTasks: previous.tasks\n        .filter(task => (task.completed === condition)),\n      filterClass: classFilter,\n    }));\n  }\n\n  filterAll = () => {\n    this.setState(() => ({\n      filteredTasks: null,\n      filterClass: ['selected', '', ''],\n    }));\n  };\n\n  render() {\n    const displayTasks = this.state.filteredTasks || [...this.state.tasks];\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            value={this.state.taskPattern.title}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.writeTask}\n            onKeyUp={this.saveTask}\n          />\n        </header>\n\n        <Main\n          tasks={displayTasks}\n          completedChange={this.completedChange}\n          completedAll={this.completedAll}\n          deleteTask={this.deleteTask}\n        />\n\n        <Footer\n          deleteCompleted={this.deleteCompleted}\n          filterClass={this.state.filterClass}\n          filterAll={this.filterAll}\n          filters={this.filters}\n          tasks={this.state.tasks}\n        />\n\n      </section>\n    );\n  }\n}\n\nexport default Todo;\n","import React from 'react';\nimport Todo from './components/Todo';\n\nfunction App() {\n  return (\n    <>\n      <Todo />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}